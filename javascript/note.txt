* Type of variable use in javascript

 1. var variable is old version variable used in javascript for eg: var myVariable = 1;

 let variable and const variable is introduced in recent
 time from 2015/16, which is now commonly used variable in
 javacript. in let variable we can assign value dynamically
 wheare as in const variable value remain constant. 
 2. for eg: let var1 = 1;
             var1 = var1 + 1;
        
 3.           const gravity = 9.8;

***********************************************************
# Data types in javascript:
    1. Number
        let myVariable = 1;
    
    2. string
        let myVariable = "shiva";

    3. object
        const var1 = {
        variableType: "object",
        variableValue: "value of object",
    };
    4. function
        const var1 = (function(){
        return "my name is shiva"   
    })();
    5. boolean
        const var1 = false;
    6. array
        const firstArray = [10, 20, 30, 40];

        Not often used array, in these array you can add 
        different data types.

        const firstArray = [10, 'shiva', { prop: 'sldlfs'}, [1, 3]];

***********************************************************
const firstVariable = [10, 'a string', { pros: 'adfflj'}, [1, 4]];
console.log(firstVariable[3]);
console.log(firstVariable[3][1]);
//answer will be 4.

// Object in javascript
const objectVariable = { prop1: 10, prop2: 20};
undefined
objectVariable
Object { prop1: 10, prop2: 20 }

objectVariable[0]
undefined
objectVariable['prop1'] //method of retriving data from object

objectVariable.prop1 //method of retriving data from object
10
const nestedObject = {
  layer1: {
    layer2: {
      layer3: {
        targetValue: 20
      }
    }
  }
} 
nestedObject.layer1.layer2.layer3.targetValue;
ans: 20

Function in javascript
const functionContainerVariable = function(){
    return 20;
}
functionContainerVariable();
ans: 20
***********************************************************
## Operators in javascript

#expontential Operator of arthematic operator
4**2
ans: 16

#Comparison operator
==, ===, !=, !==, >, <, >=, <=

== and != opposite to each other and === and !== opposite
to each other.

const result = 20 > 18;
result
.true 
const result2 = 20 ===20;
result2
.true

(==)does not care about datatypes and (===) care about 
datatypes.
for eg: const numberValue = 10;
        const stringValue = '10';
        numberValue == stringValue
        .true
        numberValue === stringValue
        .false

 cont firstArray = [1, 2, 3, 4];
 const secondArray = [1, 2, 3, 4];
firstArray === secondArray;
.false
same case in object too.

#ternary operator of Comparison operator

const result = 20 === 20 ? 'values match' : 'values do not match';
undefined
result
"values match"
both work same to each other

let resultVariable;
undefined
if ( 20 === 20){
  resultVariable = 'values match';
}
else{
  resultVariable = 'values do not match';…
"values match"
}

#logical operator 

20 === 20 && 10 ===10
true
20 === 20 && 10 === 12
false
20 === 20 || 10 === 12
true
20 === 1 || 10 === 12
false 

#operator used in real world practical example.

const isUserLoggIn = true;
undefined
const doesUserHavePermissions = false;
undefined
const canUserPerformAction = isUserLoggIn && doesUserHavePermissions;
undefined

if(canUserPerformAction)

#combining all the operator

const result = !(((40 / 20) === 2 && true) || ('yes' === 'no'));
undefined
result
false

// same as above done in below part

const first = (40 / 20) === 2;
undefined
first
true
const second = first && true;
undefined
second
true
const third = 'yes' === 'no';
undefined
third
false
const forth = second || third;
undefined
forth
true
const finalResult = !forth;
undefined
finalResult
false

#function evaluating specific variables

const result = (() => {
  return 20;
})();
undefined
result
20 
***********************************************************
# loop used in javacript.
## for loop

const blogPosts = [
  {
    title: 'What is Javascript?',
    author: 'Zack Gollwitzer',
    publishDate: 'Dec 20, 2020',
    content: 'some post content here'
  },
    {
      title: 'How do Arrays work?',
      author: 'Zack Gollwitzer',
      publishDate: 'Jan 1, 2021',
      content: 'some post content here'
  },
    {
      title: 'How long does it take to learn coding?',
      author: 'Zack Gollwitzer',
      publishDate: 'Jan 20, 2021',
      content: 'some post content here'
  }
]
undefined
for (i = 0; i < blogPosts.length; i++){
  const postTitle = blogPosts[i].title;
    const postAuthor = blogPosts[i].author;
    const postDate = blogPosts[i].publishDate;
    const postContent = blogPosts[i].content;

//  Here, we would use these variables to do something with each post
// I'll just print the values
console.log(postTitle);
console.log(postAuthor);
console.log(postDate);
console.log(postContent);
}
What is Javascript?
Zack Gollwitzer 
Dec 20, 2020 
some post content here 
How do Arrays work?
Zack Gollwitzer 
Jan 1, 2021 
some post content here 
How long does it take to learn coding?
Zack Gollwitzer 
Jan 20, 2021 
some post content here 
undefined

eg: 2

const arr = ['sfdsfdfs', 'sfdsf', 'fjewfp', 20, 40, 30, 60, 'shiva'];
undefined
for (let i = 0; i <arr.length; i++){
  if(typeof arr[i] === 'number'){
    console.log(arr[i]);
  }
}
20 
40 
30 
60
***********************************************************
#Basic javacript function.

function myFunction(){
  console.log('hello world, this is my first function');
}
undefined
typeof myFunction;
"function"
myFunction();
hello world, this is my first function 

##Imediately invoked function.

(function anotherFunction(){
  console.log('hello world');
})();
hello world

ex2:

#variable pass is parameter.
function newFunction(param1, param2){
  console.log(param1);
    console.log(param2);
}
undefined
newFunction();
undefined 
undefined 
undefined
#value passed is arguement.
newFunction(10, 'hello world');
10 
hello world
##Anamolous function
const anotherFunction = function (){
  console.log('some thing');
}
undefined
anotherFunction();
some thing

##Arrow function.

const myFunction = () => {
  console.log('hello my name is shiva');
}
undefined
myFunction();
hello my name is shiva debugger eval code:2:11
undefined
const result = myFunction();
hello my name is shiva debugger eval code:2:11
undefined
result
undefined //without return value it shows undefined.
const anotherFunction = () =>{
  const a = 20;
    return a < 30;
}
undefined
const result1 = anotherFunction();
undefined
result1 //with retrun value it shows result.
true

eg:

function myFunction(){
  return 20;
}
undefined
const aliasFunction = myFunction;
undefined
aliasFunction();
20
const obj = {
  prop1: 50,
    prop2: myFunction
}
undefined
obj.prop2();
20
***********************************************************
#Built-in-function in javascript.

​let str = 'hello world';
undefined
const result = str.toUpperCase().split(" ");
undefined
result
Array [ "HELLO", "WORLD" ]

result.indexOf("WORLD");
1
doing nothing today
doing nothing today
​
​
